stages:
  - test
  - dependencies
  - build

image:
  name: docker.io/alpine/helm:3.12.3

validate-helmfile:
  stage: test
  script:
    - helm lint .

  rules:
    - if: $CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/

check-dependencies:
  stage: dependencies
  variables:
    IMAGE: "$CI_REGISTRY_IMAGE:dev"
  before_script:
    - CHART_VERSION=$(helm inspect chart . | grep -i '^version' | awk '{ sub(/^[^:]*:[ \t]*/, ""); print }')
    - export CHART_VERSION
    - echo "Helm Login into Gitlab registry."
    - helm registry login -u $PROJECTGROUP_USER -p $PROJECTGROUP_PASSWORD $CI_REGISTRY --insecure
  script:
    - printf '%s\n' "${LABS_LOCAL_GITLAB_CERTIFICATE}" |sed 's/- /-\n/g; s/ -/\n-/g' | sed '/CERTIFICATE/! s/ /\n/g' >> /apps/ca-certificates.crt
    - export SSL_CERT_FILE=/apps/ca-certificates.crt
    - echo "Publishing version ${CHART_VERSION} of chart to Gitlab registry."
    - helm dependencies update
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" || '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'


package-dev:
  stage: build
  variables:
    IMAGE: "$CI_REGISTRY_IMAGE:dev"
  before_script:
    - CHART_VERSION=$(helm inspect chart . | grep -i '^version' | awk '{ sub(/^[^:]*:[ \t]*/, ""); print }')
    - export CHART_VERSION="${CHART_VERSION}-dev"   
    - echo "Helm Login into Gitlab registry."
    - helm registry login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY --insecure 
  script:
    - helm package . -d package --version $CHART_VERSION
    - helm push package/* oci://${CI_REGISTRY_IMAGE}${CHARTREGISTRYIMAGE_SUFFIX} --insecure-skip-tls-verify
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" 

package-release:
  stage: build
  variables:
    IMAGE: "$CI_REGISTRY_IMAGE:dev"
  before_script:
    - CHART_VERSION=$(helm inspect chart . | grep -i '^version' | awk '{ sub(/^[^:]*:[ \t]*/, ""); print }')
    - export CHART_VERSION
    - echo "Helm Login into Gitlab registry."
  #  - echo ${LABS_LOCAL_GITLAB_CERTIFICATE} >> /apps/ca-certificates.crt
    - helm registry login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY --insecure
  script:
    - helm package . -d package --version $CHART_VERSION
    - helm push package/* oci://${CI_REGISTRY_IMAGE}${CHARTREGISTRYIMAGE_SUFFIX} --insecure-skip-tls-verify
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'
