stages:
  - test
  - dependencies
  - build

.common:
  before_script:
    - CHART_VERSION=$(helm inspect chart . | grep -i '^version' | awk '{ sub(/^[^:]*:[ \t]*/, ""); print }')
    - export CHART_VERSION
    - echo "Helm Login into Gitlab registry."
    - helm registry login -u $PROJECTGROUP_USER -p $PROJECTGROUP_PASSWORD $CI_REGISTRY --insecure
    - printf '%s\n' "${LABS_LOCAL_GITLAB_CERTIFICATE}" |sed 's/- /-\n/g; s/ -/\n-/g' | sed '/CERTIFICATE/! s/ /\n/g' >> /apps/ca-certificates.crt
    - export SSL_CERT_FILE=/apps/ca-certificates.crt
    # If you prefer not to load the cetificate
    #- export HELM_PUSH="helm push --insecure-skip-tls-verify"
    - export HELM_PUSH="helm push"

image:
  name: docker.io/alpine/helm:3.12.3

validate-helmfile:
  stage: test
  script:
    - helm lint .
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/


check-dependencies:
  extends: .common
  stage: dependencies
  script:
    - echo "Updating dependencies for validation."
    - helm dependencies update
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/


package-dev:
  extends: .common
  stage: build
  script:
    - helm dependencies update
    - helm package . -d package --version ${CHART_VERSION}-dev
    - echo "Pushing DEV to oci://${CI_REGISTRY_IMAGE}${CHARTREGISTRYIMAGE_SUFFIX}."
    - ${HELM_PUSH} package/* oci://${CI_REGISTRY_IMAGE}${CHARTREGISTRYIMAGE_SUFFIX}
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" 

package-release:
  extends: .common
  stage: build
  script:
    - helm dependencies update
    - helm package . -d package --version $CHART_VERSION
    - echo "Pushing RELEASE to oci://${CI_REGISTRY_IMAGE}${CHARTREGISTRYIMAGE_SUFFIX}."
    - ${HELM_PUSH} package/* oci://${CI_REGISTRY_IMAGE}${CHARTREGISTRYIMAGE_SUFFIX}
    
    # Workaround for OCI certificate errors in ArgoCD.
    #- helm login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
    #- echo "Pushing RELEASE to oci://docker.io/${DOCKERHUB_USERNAME}."
    #- helm push package/* oci://docker.io/${DOCKERHUB_USERNAME}

  rules:
    - if: $CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/
