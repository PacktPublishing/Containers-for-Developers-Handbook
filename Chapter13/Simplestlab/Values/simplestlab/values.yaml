ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: simplestlab.172.31.255.254.nip.io
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  port: 8080
  name: simplestlab-simplestlab-lb

simplestlab-db:
  image:
    repository: docker.io/frjaraur/simplestdb
    pullPolicy: IfNotPresent
    tag: "1.0"
  envVariables:
  # Never use clear values. This file is stored in GitLab. Use Sealed Secrets to encrypt and use here the encrypted values.
    POSTGRES_PASSWORD: changeme

  # Never use clear values, even on this script because it includes passwords. This file is stored in GitLab. Use Sealed Secrets to encrypt and use here the encrypted values, files can also be encrypted using this mechanism.
  initdbScript: |
    #!/bin/bash
    set -e

    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" <<-EOSQL
        CREATE USER demo with PASSWORD 'd3m0' ;
        CREATE DATABASE demo owner demo;
        GRANT ALL PRIVILEGES ON DATABASE demo TO demo;
        \connect demo;

        CREATE TABLE IF NOT EXISTS hits
        (
          hitid serial,
          serverip varchar(15) NOT NULL,
          clientip varchar(15) NOT NULL,
          date timestamp without time zone,
          PRIMARY KEY (hitid)
        );
        ALTER TABLE hits OWNER TO demo;
    EOSQL


simplestlab-app:
  image:
    repository: registry.172.31.255.254.nip.io/simplestlab/images/simplestapp
    pullPolicy: Always
    tag: "1.0.0"
  replicaCount: 1
  envVariables:
  # Never use clear values. This file is stored in GitLab. Use Sealed Secrets to encrypt and use here the encrypted values.
    dbhost: db
    ###################################
    ## First Test Update -- Change the value of this key
    #dbhost: simplestlab-simplestlab-db
    ####################################
    dbname: demo
    dbpasswd: d3m0
    dbuser: demo
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

simplestlab-lb:
  image:
    repository: docker.io/nginx
    pullPolicy: IfNotPresent
    tag: "alpine"
  service:
    port: 8080
  ##################################
  # Second Test Update -- Uncomment whti section
  # nginxConfig: |
  #   user  nginx;
  #   worker_processes  auto;
  #   error_log  /tmp/nginx/error.log warn;
  #   pid        /tmp/nginx/nginx.pid;

  #   events { 
  #     worker_connections  1024; 
  #   }

  #   http { 
  #     server {
  #       listen 8080;
  #       location /healthz { 
  #         add_header Content-Type text/plain;
  #         return 200 'OK';
  #       } 
  #       location / {
  #         proxy_pass http://simplestlab-simplestlab-app:3000;
  #       }   
  #     }
  #   }
  #
  ###################################